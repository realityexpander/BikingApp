// Generated by Dagger (https://dagger.dev).
package com.realityexpander.runningapp.di;

import android.app.PendingIntent;
import android.content.Context;
import androidx.core.app.NotificationCompat;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.ServiceScoped")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServiceModule_ProvideBaseNotificationBuilderFactory implements Factory<NotificationCompat.Builder> {
  private final Provider<Context> contextProvider;

  private final Provider<PendingIntent> pendingIntentProvider;

  public ServiceModule_ProvideBaseNotificationBuilderFactory(Provider<Context> contextProvider,
      Provider<PendingIntent> pendingIntentProvider) {
    this.contextProvider = contextProvider;
    this.pendingIntentProvider = pendingIntentProvider;
  }

  @Override
  public NotificationCompat.Builder get() {
    return provideBaseNotificationBuilder(contextProvider.get(), pendingIntentProvider.get());
  }

  public static ServiceModule_ProvideBaseNotificationBuilderFactory create(
      Provider<Context> contextProvider, Provider<PendingIntent> pendingIntentProvider) {
    return new ServiceModule_ProvideBaseNotificationBuilderFactory(contextProvider, pendingIntentProvider);
  }

  public static NotificationCompat.Builder provideBaseNotificationBuilder(Context context,
      PendingIntent pendingIntent) {
    return Preconditions.checkNotNullFromProvides(ServiceModule.INSTANCE.provideBaseNotificationBuilder(context, pendingIntent));
  }
}
