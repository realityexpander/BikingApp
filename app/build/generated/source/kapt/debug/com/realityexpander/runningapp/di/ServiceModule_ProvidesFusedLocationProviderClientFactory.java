// Generated by Dagger (https://dagger.dev).
package com.realityexpander.runningapp.di;

import android.content.Context;
import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.ServiceScoped")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServiceModule_ProvidesFusedLocationProviderClientFactory implements Factory<FusedLocationProviderClient> {
  private final Provider<Context> contextProvider;

  public ServiceModule_ProvidesFusedLocationProviderClientFactory(
      Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public FusedLocationProviderClient get() {
    return providesFusedLocationProviderClient(contextProvider.get());
  }

  public static ServiceModule_ProvidesFusedLocationProviderClientFactory create(
      Provider<Context> contextProvider) {
    return new ServiceModule_ProvidesFusedLocationProviderClientFactory(contextProvider);
  }

  public static FusedLocationProviderClient providesFusedLocationProviderClient(Context context) {
    return Preconditions.checkNotNullFromProvides(ServiceModule.INSTANCE.providesFusedLocationProviderClient(context));
  }
}
